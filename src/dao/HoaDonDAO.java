package dao;

import connectDB.SQLConnection;
import entity.ChiTietHoaDon;
import entity.HoaDon;
import java.sql.SQLException;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.sql.*;
import java.sql.Types;

public class HoaDonDAO {
    private ChiTietHoaDonDAO chiTietDAO;
    public HoaDonDAO() {
        this.chiTietDAO = new ChiTietHoaDonDAO();
    }
    public HoaDon getHoaDonChuaThanhToan(String maBan) {
        HoaDon hoaDon = null;

        // --- S·ª¨A C√ÇU SQL ---
        // Li√™n k·∫øt HoaDon v·ªõi DonDatMon (ƒë·ªÉ l·∫•y maBan)
        String sql = "SELECT hd.* FROM HoaDon hd " +
                "JOIN DonDatMon ddm ON hd.maDon = ddm.maDon " +
                "WHERE ddm.maBan = ? AND hd.trangThai = N'Ch∆∞a thanh to√°n'";

        try (Connection conn = SQLConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, maBan);

            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    // 1. L·∫•y th√¥ng tin H√≥a ƒê∆°n
                    // (H√†m createHoaDonFromResultSet s·∫Ω ƒë∆∞·ª£c s·ª≠a ·ªü b∆∞·ªõc 2.2)
                    hoaDon = createHoaDonFromResultSet(rs);

                    // 2. L·∫•y th√¥ng tin Chi Ti·∫øt H√≥a ƒê∆°n
                    List<ChiTietHoaDon> dsChiTiet = chiTietDAO.getChiTietTheoMaDon(hoaDon.getMaDon());

                    // 3. G√°n chi ti·∫øt v√†o h√≥a ƒë∆°n
                    hoaDon.setDsChiTiet(dsChiTiet);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return hoaDon; // Tr·∫£ v·ªÅ null n·∫øu kh√¥ng t√¨m th·∫•y
    }
    // NOTE S·ª¨A: Th√™m h√†m c·∫≠p nh·∫≠t maNV khi thanh to√°n
    public boolean capNhatNhanVien(String maHD, String maNV) {
        String sql = "UPDATE HoaDon SET maNV = ? WHERE maHD = ?";
        try (Connection conn = SQLConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, maNV);
            ps.setString(2, maHD);

            return ps.executeUpdate() > 0;
        } catch (SQLException e) {
            System.err.println("L·ªói khi c·∫≠p nh·∫≠t NV cho h√≥a ƒë∆°n " + maHD + ": " + e.getMessage());
            e.printStackTrace();
        }
        return false;
    }
    public boolean thanhToanHoaDon(String maHD, float tienKhachDua, String hinhThucThanhToan) {
        String sql = "UPDATE HoaDon SET trangThai = N'ƒê√£ thanh to√°n', tienKhachDua = ?, hinhThucThanhToan = ? " +
                "WHERE maHD = ? AND trangThai = N'Ch∆∞a thanh to√°n'"; // Ch·ªâ c·∫≠p nh·∫≠t Hƒê ch∆∞a thanh to√°n
        Connection conn = null; // Khai b√°o ngo√†i try ƒë·ªÉ d√πng cho transaction (n·∫øu c·∫ßn)
        PreparedStatement ps = null;
        boolean success = false;

        try {
            conn = SQLConnection.getConnection();
            // --- B·∫Øt ƒë·∫ßu Transaction (T√πy ch·ªçn nh∆∞ng n√™n c√≥ n·∫øu c·∫≠p nh·∫≠t nhi·ªÅu b·∫£ng) ---
            // conn.setAutoCommit(false);

            ps = conn.prepareStatement(sql);
            ps.setFloat(1, tienKhachDua);
            ps.setString(2, hinhThucThanhToan);
            ps.setString(3, maHD);

            int rowsAffected = ps.executeUpdate();
            success = (rowsAffected > 0);

            // --- K·∫øt th√∫c Transaction (n·∫øu d√πng) ---
            // if (success) {
            //     conn.commit();
            // } else {
            //     conn.rollback();
            // }

        } catch (SQLException e) {
            System.err.println("L·ªói SQL khi thanh to√°n h√≥a ƒë∆°n " + maHD + ": " + e.getMessage());
            e.printStackTrace();
            // --- Rollback n·∫øu l·ªói (n·∫øu d√πng transaction) ---
            // try { if (conn != null) conn.rollback(); } catch (SQLException ex) {}
            success = false;
        } finally {
            // ƒê√≥ng PreparedStatement
            try { if (ps != null) ps.close(); } catch (SQLException ex) {}
            // --- Reset AutoCommit v√† ƒë√≥ng Connection (n·∫øu d√πng transaction) ---
            // try { if (conn != null) conn.setAutoCommit(true); } catch (SQLException ex) {}
            // Kh√¥ng ƒë√≥ng connection n·∫øu n√≥ ƒë∆∞·ª£c qu·∫£n l√Ω b·ªüi Singleton
        }
        return success;
    }
    public boolean capNhatTongTien(String maHD, float tongTienMoi) {
        // Gi·∫£ s·ª≠ c·ªôt t·ªïng ti·ªÅn trong b·∫£ng HoaDon t√™n l√† tongTien
        String sql = "UPDATE HoaDon SET tongTien = ? WHERE maHD = ?";
        try (Connection conn = SQLConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setFloat(1, tongTienMoi);
            ps.setString(2, maHD);

            return ps.executeUpdate() > 0;
        } catch (Exception e) {
            System.err.println("L·ªói khi c·∫≠p nh·∫≠t t·ªïng ti·ªÅn cho h√≥a ƒë∆°n " + maHD + ": " + e.getMessage());
            e.printStackTrace();
        }
        return false;
    }
    /**
     * Chuy·ªÉn ResultSet th√†nh ƒë·ªëi t∆∞·ª£ng HoaDon (ƒê√É LO·∫†I B·ªé KH√ìA NGO·∫†I).
     */
    private HoaDon createHoaDonFromResultSet(ResultSet rs) throws Exception {
        String maHD = rs.getString("maHD");

        LocalDateTime ngayLap = rs.getTimestamp("ngayLap").toLocalDateTime();
        String trangThai = rs.getString("trangThai");
        String hinhThucThanhToan = rs.getString("hinhThucThanhToan");

        // --- C√ÅC C·ªòT N√ÄY T·ªíN T·∫†I TRONG HOADON (ƒê√öNG) ---
        String maDon = rs.getString("maDon");
        String maNV = rs.getString("maNV");
        String maKM = rs.getString("maKM");

        float tongTien = rs.getFloat("tongTien");

        // üåü B·ªî SUNG: L·∫§Y TI·ªÄN KH√ÅCH ƒê∆ØA T·ª™ CSDL
        float tienKhachDua = rs.getFloat("tienKhachDua");

        // D√πng Constructor m·ªõi c·ªßa HoaDon (ƒë√£ b·ªè maBan)
        HoaDon hd = new HoaDon(maHD, ngayLap, trangThai, hinhThucThanhToan, maDon, maNV, maKM);

        // üåü B·ªî SUNG: G√ÅN GI√Å TR·ªä V·ª™A L·∫§Y
        hd.setTienKhachDua(tienKhachDua);
        hd.setTongTienTuDB(tongTien);
        return hd;
    }

    // --------------------------------------------------------------------------------------------------------------------------

    /**
     * [SELECT] - L·∫•y to√†n b·ªô danh s√°ch h√≥a ƒë∆°n t·ª´ CSDL.
     */
    public List<HoaDon> getAllHoaDon() {
        List<HoaDon> dsHoaDon = new ArrayList<>();
        // C·∫≠p nh·∫≠t c√¢u l·ªánh SQL: B·ªé maKH, maNV, maBan, TH√äM tienThoi
        String sql = "SELECT * FROM HoaDon ORDER BY ngayLap DESC";
        try (Connection conn = SQLConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                dsHoaDon.add(createHoaDonFromResultSet(rs));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return dsHoaDon;
    }

    // --------------------------------------------------------------------------------------------------------------------------

    /**
     * [INSERT] - Th√™m m·ªôt h√≥a ƒë∆°n m·ªõi v√†o CSDL.
     */
    public boolean themHoaDon(HoaDon hd) {
        // C·∫≠p nh·∫≠t c√¢u l·ªánh SQL: B·ªé maKH, maNV, maBan, TH√äM tienThoi
        String sql = "INSERT INTO HoaDon (maHD, ngayLap, tongTien, trangThai, hinhThucThanhToan, tienKhachDua,maNV, maKM, maDon) " +
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";

        try (Connection conn = SQLConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, hd.getMaHD());
            ps.setTimestamp(2, Timestamp.valueOf(hd.getNgayLap()));
            ps.setFloat(3, hd.getTongTien());
            ps.setString(4, hd.getTrangThai());
            ps.setString(5, hd.getHinhThucThanhToan());
            ps.setFloat(6, hd.getTienKhachDua());
            ps.setString(7, hd.getMaNV());
            if (hd.getMaKM() != null) {
                ps.setString(8, hd.getMaKM());
            } else {
                ps.setNull(8, java.sql.Types.NVARCHAR); // N·∫øu maKM l√† null
            } // Placeholder for maKM
            ps.setString(9, hd.getMaDon()); // Placeholder for maDon

            return ps.executeUpdate() > 0;
        } catch (java.sql.SQLIntegrityConstraintViolationException e) {
            System.err.println("L·ªói r√†ng bu·ªôc: M√£ HD ƒë√£ t·ªìn t·∫°i.");
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    // --------------------------------------------------------------------------------------------------------------------------

    /**
     * [SEARCH] - T√¨m ki·∫øm h√≥a ƒë∆°n theo M√£ HD.
     */
    public List<HoaDon> timHoaDon(String tuKhoa) {
        List<HoaDon> dsKetQua = new ArrayList<>();
        // Ch·ªâ t√¨m ki·∫øm theo M√£ HD (Kh√¥ng c√≤n M√£ NV/B√†n)
        String sql = "SELECT * FROM HoaDon WHERE maHD LIKE ? ORDER BY ngayLap DESC";

        try (Connection conn = SQLConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, "%" + tuKhoa + "%");

            try (ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    dsKetQua.add(createHoaDonFromResultSet(rs));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return dsKetQua;
    }
    public HoaDon getHoaDonTheoMaDon(String maDon) {
        HoaDon hoaDon = null;
        // T√¨m h√≥a ƒë∆°n c√≥ maDon kh·ªõp
        String sql = "SELECT * FROM HoaDon WHERE maDon = ?";

        try (Connection conn = SQLConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, maDon);

            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    // D√πng l·∫°i h√†m helper ƒë·ªÉ t·∫°o object
                    hoaDon = createHoaDonFromResultSet(rs);

                    // L·∫•y lu√¥n chi ti·∫øt h√≥a ƒë∆°n n·∫øu c√≥ (t√πy ch·ªçn, nh∆∞ng h·ªØu √≠ch)
                    // V√¨ h√≥a ƒë∆°n m·ªõi t·∫°o th∆∞·ªùng ch∆∞a c√≥ chi ti·∫øt ngay
                    // List<ChiTietHoaDon> dsChiTiet = chiTietDAO.getChiTietTheoMaDon(hoaDon.getMaDon());
                    // hoaDon.setDsChiTiet(dsChiTiet);
                }
            }
        } catch (Exception e) {
            System.err.println("L·ªói khi t√¨m h√≥a ƒë∆°n theo m√£ ƒë∆°n " + maDon + ": " + e.getMessage());
            e.printStackTrace();
        }
        return hoaDon; // Tr·∫£ v·ªÅ null n·∫øu kh√¥ng t√¨m th·∫•y
    }
}