package entity;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;

public class HoaDon {

    private String maHD;
    private LocalDateTime ngayLap;
    private float tongTien;
    private String trangThai;
    private String hinhThucThanhToan;
    private float tienKhachDua; // üåü ƒê√É KHAI B√ÅO


    private String maDon;
    private String maNV;
    private String maKM;
    private String maKH;
    private float giamGia;
    private float vat;
    private float tongThanhToan; // Ti·ªÅn th·ª±c t·∫ø kh√°ch ph·∫£i tr·∫£
    private List<ChiTietHoaDon> dsChiTiet;

    public HoaDon(String maHD, LocalDateTime ngayLap, String trangThai,
                  String hinhThucThanhToan, String maDon,
                  String maNV, String maKM) {
        this.maHD = maHD;
        this.ngayLap = ngayLap;
        this.trangThai = trangThai;
        this.hinhThucThanhToan = hinhThucThanhToan;
        this.maDon = maDon;
        this.maNV = maNV;
        this.maKM = maKM;

        // Kh·ªüi t·∫°o c√°c gi√° tr·ªã
        this.dsChiTiet = new ArrayList<>();
        this.tongTien = 0;
        this.giamGia = 0;
        this.vat = 0;
        this.tongThanhToan = 0;
        this.tienKhachDua = 0; // üåü KH·ªûI T·∫†O TI·ªÄN KH√ÅCH ƒê∆ØA
    }

    public void setDsChiTiet(List<ChiTietHoaDon> dsChiTiet) {
        this.dsChiTiet = dsChiTiet;
        tinhTatCaTien(); // T√≠nh l·∫°i t·ªïng ti·ªÅn khi c√≥ chi ti·∫øt
    }

    private void tinhTatCaTien() {
        // 1. T√≠nh t·ªïng ti·ªÅn m√≥n ƒÉn
        this.tongTien = 0;
        for (ChiTietHoaDon ct : dsChiTiet) {
            this.tongTien += ct.getThanhtien();
        }

        // 2. TODO: T√≠nh gi·∫£m gi√° (d·ª±a v√†o this.maKM)
        this.giamGia = 0;

        // 3. TODO: T√≠nh VAT (d·ª±a v√†o quy ƒë·ªãnh, v√≠ d·ª• 8%)
        this.vat = 0;

        // 4. T√≠nh t·ªïng thanh to√°n
        this.tongThanhToan = this.tongTien - this.giamGia + this.vat;
    }

    public HoaDon(HoaDon other) {
        this.maHD = phatSinhMaHD();
        this.ngayLap = other.ngayLap;
        this.tongTien = other.tongTien;
        this.trangThai = other.trangThai;
        this.hinhThucThanhToan = other.hinhThucThanhToan;
        this.tienKhachDua = other.tienKhachDua;
    }

    // --- SETTER B·ªî SUNG ---
    public void setTienKhachDua(float tienKhachDua) {
        this.tienKhachDua = tienKhachDua;
    }

    public void setTongTienTuDB(float tongTien) {
        // Khi load t·ª´ DB, c·ªôt tongTien th∆∞·ªùng l√† t·ªïng cu·ªëi c√πng
        this.tongTien = tongTien;

        // üåü S·ª¨A: G√°n tongThanhToan b·∫±ng tongTien t·ª´ DB (gi·∫£ ƒë·ªãnh l√† t·ªïng cu·ªëi)
        this.tongThanhToan = tongTien;
    }

    public void setMaKH(String maKH) {
        this.maKH = maKH;
    }

    // --- LOGIC T√çNH TI·ªÄN TH·ªêI ƒê√É S·ª¨A ---
    public float tinhTienThoi() {
        // üåü D√πng tongThanhToan l√† ti·ªÅn ph·∫£i tr·∫£
        if (this.tienKhachDua >= this.tongThanhToan) {
            return this.tienKhachDua - this.tongThanhToan;
        }
        return 0;
    }

    // --- GETTER ---
    public String getMaKH() { return maKH; }
    public String getMaHD() { return maHD; }
    public LocalDateTime getNgayLap() { return ngayLap; }
    public String getTrangThai() { return trangThai; }
    public String getHinhThucThanhToan() { return hinhThucThanhToan; }
    public float getTienKhachDua() { return tienKhachDua; }
    public String getMaDon() { return maDon; }
    public String getMaNV() { return maNV; }
    public String getMaKM() { return maKM; }
    public List<ChiTietHoaDon> getDsChiTiet() { return dsChiTiet; }

    // C√°c gi√° tr·ªã ƒë√£ t√≠nh to√°n
    public float getTongTien() { return tongTien; } // T·ªïng m√≥n ƒÉn
    public float getGiamGia() { return giamGia; }
    public float getVat() { return vat; }
    public float getTongThanhToan() { return tongThanhToan; } // Ti·ªÅn ph·∫£i tr·∫£

    // üåü S·ª¨ D·ª§NG H√ÄM T√çNH TO√ÅN TI·ªÄN TH·ªêI
    public float getTienThoi() {
        return tinhTienThoi();
    }

    private String phatSinhMaHD() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("ddMMyy");
        String datePart = LocalDateTime.now().format(formatter);
        int randomPart = ThreadLocalRandom.current().nextInt(1000, 10000);
        return "HD" + datePart + randomPart;
    }

    @Override
    public String toString() {
        return "HoaDon{" +
                "maHD='" + maHD + '\'' +
                ", maDon='" + maDon + '\'' +
                ", trangThai='" + trangThai + '\'' +
                ", tongThanhToan=" + tongThanhToan +
                ", soLuongMon=" + dsChiTiet.size() +
                '}';
    }
}