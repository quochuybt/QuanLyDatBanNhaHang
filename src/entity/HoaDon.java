package entity;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;
import dao.KhachHangDAO;
import dao.KhuyenMaiDAO;

public class HoaDon {

    private String maHD;
    private LocalDateTime ngayLap;
    private float tongTien;
    private String trangThai;
    private String hinhThucThanhToan;
    private float tienKhachDua; // üåü ƒê√É KHAI B√ÅO


    private String maDon;
    private String maNV;
    private String maKM;
    private String maKH;
    private float giamGia;
    private float vat;
    private float tongThanhToan; // Ti·ªÅn th·ª±c t·∫ø kh√°ch ph·∫£i tr·∫£
    private List<ChiTietHoaDon> dsChiTiet;
    public HoaDon() {
        this.maHD = phatSinhMaHD(); // T·ª± sinh m√£ m·ªõi
        this.ngayLap = LocalDateTime.now();
        this.trangThai = "Ch∆∞a thanh to√°n";
        this.hinhThucThanhToan = "Ti·ªÅn m·∫∑t"; // M·∫∑c ƒë·ªãnh
        // maDon, maNV, maKH, maKM s·∫Ω ƒë∆∞·ª£c set sau khi c√≥ th√¥ng tin
        this.dsChiTiet = new ArrayList<>();
        this.tongTien = 0;
        this.giamGia = 0;
        this.vat = 0;
        this.tongThanhToan = 0;
    }

    public HoaDon(String maHD, LocalDateTime ngayLap, String trangThai,
                  String hinhThucThanhToan, String maDon,
                  String maNV, String maKM) {
        this.maHD = maHD;
        this.ngayLap = ngayLap;
        this.trangThai = trangThai;
        this.hinhThucThanhToan = hinhThucThanhToan;
        this.maDon = maDon;
        this.maNV = maNV;
        this.maKM = maKM;

        // Kh·ªüi t·∫°o c√°c gi√° tr·ªã
        this.dsChiTiet = new ArrayList<>();
        this.tongTien = 0;
        this.giamGia = 0;
        this.vat = 0;
        this.tongThanhToan = 0;
        this.tienKhachDua = 0; // üåü KH·ªûI T·∫†O TI·ªÄN KH√ÅCH ƒê∆ØA
    }

    public void setDsChiTiet(List<ChiTietHoaDon> dsChiTiet) {
        this.dsChiTiet = dsChiTiet;
    }
    public void tinhLaiTongTienTuChiTiet() {
        this.tongTien = 0;
        if (this.dsChiTiet != null) {
            for (ChiTietHoaDon ct : dsChiTiet) {
                ct.tinhThanhTien(); // ƒê·∫£m b·∫£o th√†nh ti·ªÅn chi ti·∫øt ƒë√∫ng
                this.tongTien += ct.getThanhtien();
            }
        }
    }
    public void tinhLaiGiamGiaVaTongTien(KhachHangDAO khachHangDAO, KhuyenMaiDAO maKhuyenMaiDAO) {
        // 1. ƒê·∫£m b·∫£o t·ªïng ti·ªÅn m√≥n ƒÉn (ch∆∞a gi·∫£m) ƒë√£ ƒë∆∞·ª£c t√≠nh ƒë√∫ng
        tinhLaiTongTienTuChiTiet(); // T√≠nh l·∫°i this.tongTien t·ª´ dsChiTiet

        float tongCong = this.tongTien; // D√πng tongTien v·ª´a t√≠nh
        float giamGiaTV = 0;
        float giamGiaMa = 0;

        // 2. T√≠nh gi·∫£m gi√° th√†nh vi√™n
        if (this.maKH != null && khachHangDAO != null) {
            KhachHang kh = khachHangDAO.timTheoMaKH(this.maKH);
            if (kh != null) {
                float phanTramGiamTV = getPhanTramGiamTheoHang(kh.getHangThanhVien());
                giamGiaTV = tongCong * phanTramGiamTV / 100;
            }
        }

        // 3. T√≠nh gi·∫£m gi√° theo M√£ KM (n·∫øu c√≥)
        if (this.maKM != null && !this.maKM.isEmpty() && maKhuyenMaiDAO != null) {
            // Gi·∫£ s·ª≠ MaKhuyenMaiDAO tr·∫£ v·ªÅ entity KhuyenMai (ƒë√£ s·ª≠a)
            entity.KhuyenMai km = maKhuyenMaiDAO.getKhuyenMaiHopLeByMa(this.maKM);
            if (km != null) {
                if (tongCong >= km.getDieuKienApDung()) { // D√πng getter m·ªõi
                    if ("Ph·∫ßn trƒÉm".equalsIgnoreCase(km.getLoaiKhuyenMai()) || "Gi·∫£m theo ph·∫ßn trƒÉm".equalsIgnoreCase(km.getLoaiKhuyenMai())) {
                        giamGiaMa = tongCong * (float)km.getGiaTri() / 100; // D√πng getter m·ªõi
                    } else if ("S·ªë ti·ªÅn".equalsIgnoreCase(km.getLoaiKhuyenMai()) || "Gi·∫£m gi√° s·ªë ti·ªÅn".equalsIgnoreCase(km.getLoaiKhuyenMai())){
                        giamGiaMa = (float)km.getGiaTri(); // D√πng getter m·ªõi
                    }
                } else {
                    System.out.println("H√≥a ƒë∆°n kh√¥ng ƒë·ªß ƒêK √°p d·ª•ng m√£: " + this.maKM);
                    // Kh√¥ng t·ª± h·ªßy m√£ ·ªü ƒë√¢y, ƒë·ªÉ GUI x·ª≠ l√Ω n·∫øu mu·ªën
                }
            } else {
                System.out.println("M√£ KM " + this.maKM + " kh√¥ng c√≤n h·ª£p l·ªá.");
                // Kh√¥ng t·ª± h·ªßy m√£ ·ªü ƒë√¢y
            }
        }

        // 4. T√≠nh t·ªïng gi·∫£m gi√° (C·ªông d·ªìn)
        this.giamGia = giamGiaTV + giamGiaMa;

        // 5. T√≠nh VAT (V√≠ d·ª• 0%)
        this.vat = 0; // Ho·∫∑c t√≠nh theo c√¥ng th·ª©c

        // 6. T√≠nh l·∫°i T·ªïng thanh to√°n cu·ªëi c√πng
        tinhLaiTongThanhToan(); // G·ªçi h√†m t√≠nh t·ªïng cu·ªëi
    }
    private float getPhanTramGiamTheoHang(HangThanhVien hang) {
        if (hang == null) return 0.0f;
        switch (hang) {
            case DIAMOND: return 10.0f;
            case GOLD: return 5.0f; // S·ª≠a theo b·∫£ng: Gold 5%
            case SILVER: return 3.0f;
            case BRONZE: return 2.0f;
            case MEMBER: return 0.0f; // Member kh√¥ng gi·∫£m
            case NONE: default: return 0.0f;
        }
    }
    public HoaDon(HoaDon other) {
        // KH√îNG sinh m√£ m·ªõi khi copy, gi·ªØ nguy√™n m√£ c≈©
        this.maHD = other.maHD;
        this.ngayLap = other.ngayLap;
        this.tongTien = other.tongTien;
        this.trangThai = other.trangThai;
        this.hinhThucThanhToan = other.hinhThucThanhToan;
        this.tienKhachDua = other.tienKhachDua;
        this.maDon = other.maDon;
        this.maNV = other.maNV;
        this.maKM = other.maKM;
        this.maKH = other.maKH;
        this.giamGia = other.giamGia;
        this.vat = other.vat;
        this.tongThanhToan = other.tongThanhToan;
        // Copy danh s√°ch chi ti·∫øt (n√™n t·∫°o copy s√¢u n·∫øu ChiTietHoaDon c√≥ th·ªÉ thay ƒë·ªïi)
        this.dsChiTiet = new ArrayList<>();
        if (other.dsChiTiet != null) {
            for (ChiTietHoaDon ct : other.dsChiTiet) {
                // Gi·∫£ s·ª≠ ChiTietHoaDon c√≥ constructor copy
                this.dsChiTiet.add(new ChiTietHoaDon(ct));
            }
        }
    }

    // --- SETTER B·ªî SUNG ---
    public void setTienKhachDua(float tienKhachDua) {
        this.tienKhachDua = tienKhachDua;
    }

    public void setTongTienTuDB(float tongTien) {
        // Khi load t·ª´ DB, c·ªôt tongTien th∆∞·ªùng l√† t·ªïng cu·ªëi c√πng
        this.tongTien = tongTien;

        // üåü S·ª¨A: G√°n tongThanhToan b·∫±ng tongTien t·ª´ DB (gi·∫£ ƒë·ªãnh l√† t·ªïng cu·ªëi)
        this.tongThanhToan = tongTien;
    }

    public void setMaKH(String maKH) {
        this.maKH = maKH;
    }

    // --- LOGIC T√çNH TI·ªÄN TH·ªêI ƒê√É S·ª¨A ---
    public float tinhTienThoi() {
        // üåü D√πng tongThanhToan l√† ti·ªÅn ph·∫£i tr·∫£
        if (this.tienKhachDua >= this.tongThanhToan) {
            return this.tienKhachDua - this.tongThanhToan;
        }
        return 0;
    }

    // --- GETTER ---
    public String getMaKH() { return maKH; }
    public String getMaHD() { return maHD; }
    public LocalDateTime getNgayLap() { return ngayLap; }
    public String getTrangThai() { return trangThai; }
    public String getHinhThucThanhToan() { return hinhThucThanhToan; }
    public float getTienKhachDua() { return tienKhachDua; }
    public String getMaDon() { return maDon; }
    public String getMaNV() { return maNV; }
    public String getMaKM() { return maKM; }
    public void setMaKM(String maKM) {
        this.maKM = maKM;
    }
    public List<ChiTietHoaDon> getDsChiTiet() { return dsChiTiet; }

    // C√°c gi√° tr·ªã ƒë√£ t√≠nh to√°n
    public float getTongTien() { return tongTien; } // T·ªïng m√≥n ƒÉn
    public float getGiamGia() { return giamGia; }
    public float getVat() { return vat; }
    public float getTongThanhToan() { return tongThanhToan; } // Ti·ªÅn ph·∫£i tr·∫£

    // (B·ªè c√°c h√†m set, validate, phatSinhMaHD... c≈© ƒë·ªÉ ƒë∆°n gi·∫£n h√≥a)
    public void setGiamGia(float giamGia) {
        if (giamGia < 0) { // Th√™m validation c∆° b·∫£n
            this.giamGia = 0;
        } else {
            this.giamGia = giamGia;
        }
    }
    public void setVat(float vat) { this.vat = (vat < 0) ? 0 : vat; }
    public void tinhLaiTongThanhToan() {
        // tongTien l√† t·ªïng ti·ªÅn g·ªëc c·ªßa c√°c m√≥n ƒÉn
        this.tongThanhToan = this.tongTien - this.giamGia + this.vat;
        if (this.tongThanhToan < 0) { // ƒê·∫£m b·∫£o kh√¥ng √¢m
            this.tongThanhToan = 0;
        }
        System.out.println("DEBUG HoaDon: tongTien=" + tongTien + ", giamGia=" + giamGia + ", vat=" + vat + " => tongThanhToan=" + tongThanhToan);
    }
    // üåü S·ª¨ D·ª§NG H√ÄM T√çNH TO√ÅN TI·ªÄN TH·ªêI
    public float getTienThoi() {
        return tinhTienThoi();
    }

    private String phatSinhMaHD() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("ddMMyy");
        String datePart = LocalDateTime.now().format(formatter);
        int randomPart = ThreadLocalRandom.current().nextInt(1000, 10000);
        return "HD" + datePart + randomPart;
    }


    @Override
    public String toString() {
        return "HoaDon{" +
                "maHD='" + maHD + '\'' +
                ", maDon='" + maDon + '\'' +
                ", trangThai='" + trangThai + '\'' +
                ", tongThanhToan=" + tongThanhToan +
                ", soLuongMon=" + dsChiTiet.size() +
                '}';
    }
}